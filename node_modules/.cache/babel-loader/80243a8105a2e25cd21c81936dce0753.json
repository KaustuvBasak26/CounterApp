{"ast":null,"code":"import _slicedToArray from \"/home/talentica-all.com/kaustuvb/Documents/ReactCounter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/talentica-all.com/kaustuvb/Documents/ReactCounter/src/counter/counter.js\";\nimport React, { useState } from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\n\nconst Counter = props => {\n  let styles = {\n    height: \"100vh\"\n  };\n\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  let setCounter = e => {\n    let target = e.target.id;\n\n    if (count !== 10) {\n      if (target === 'increase') {\n        setCount(count = count + 1);\n      } else {\n        setCount(count = count - 1);\n      }\n\n      if (count == 10) {\n        window.alert(\"Max Limit Reached!\");\n      }\n\n      React.createElement(Jumbotron, {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, count), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Counting above...\"), React.createElement(\"hr\", {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"decrease\",\n        color: \"warning\",\n        onClick: setCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \" -1 \"), React.createElement(Button, {\n        id: \"increase\",\n        color: \"success\",\n        onClick: setCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \" +1 \")), React.createElement(Button, {\n        color: \"danger\",\n        size: \"lg\",\n        block: true,\n        onClick: props.exitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"EXIT\"));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Jumbotron, {\n    style: styles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"display-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, count), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Counting above...\"), React.createElement(\"hr\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Button, {\n    id: \"decrease\",\n    color: \"warning\",\n    onClick: setCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" -1 \"), React.createElement(Button, {\n    id: \"increase\",\n    color: \"success\",\n    onClick: setCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" +1 \")), React.createElement(Button, {\n    color: \"danger\",\n    size: \"lg\",\n    block: true,\n    onClick: props.exitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"EXIT\")));\n};\n\nexport default Counter;","map":{"version":3,"sources":["/home/talentica-all.com/kaustuvb/Documents/ReactCounter/src/counter/counter.js"],"names":["React","useState","Jumbotron","Button","Counter","props","styles","height","count","setCount","setCounter","e","target","id","window","alert","exitHandler"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\n\nconst Counter = (props) => {\n let styles = {\n     height: \"100vh\"\n }\n\n let [count, setCount] = useState(0);\n\n\n let setCounter = (e) => {\n    let target = e.target.id;\n    if(count!==10){\n    if(target === 'increase'){\n       setCount(count = count+1)\n    }else{\n       setCount(count = count-1)\n    }\n    if(count == 10){\n      window.alert(\"Max Limit Reached!\")\n    }<Jumbotron style={styles}>\n    <h1 className=\"display-3\">{count}</h1>\n    <p className=\"lead\">Counting above...</p>\n    <hr className=\"my-2\" />\n    <p className=\"lead\">\n      <Button id=\"decrease\" color=\"warning\" onClick = {setCounter}> -1 </Button>\n      <Button id=\"increase\" color=\"success\" onClick = {setCounter}> +1 </Button>\n    </p>\n    <Button color=\"danger\" size=\"lg\" block onClick={props.exitHandler}>EXIT</Button>\n </Jumbotron>\n}\n\n }\n\n  return (\n    <div>\n      <Jumbotron style={styles}>\n        <h1 className=\"display-3\">{count}</h1>\n        <p className=\"lead\">Counting above...</p>\n        <hr className=\"my-2\" />\n        <p className=\"lead\">\n          <Button id=\"decrease\" color=\"warning\" onClick = {setCounter}> -1 </Button>\n          <Button id=\"increase\" color=\"success\" onClick = {setCounter}> +1 </Button>\n        </p>\n        <Button color=\"danger\" size=\"lg\" block onClick={props.exitHandler}>EXIT</Button>\n     </Jumbotron>\n    </div>\n  );\n};\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}